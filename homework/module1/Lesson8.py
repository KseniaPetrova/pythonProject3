"""
Задание "Средний балл":
Вам необходимо решить задачу из реальной жизни: "школьные учителя устали подсчитывать
вручную средний балл каждого ученика, поэтому вам предстоит автоматизировать этот процесс":

На вход даны следующие даннные:
Список: grades = [[5, 3, 3, 5, 4], [2, 2, 2, 3], [4, 5, 5, 2], [4, 4, 3], [5, 5, 5, 4, 5]]
Множество: students = {'Johnny', 'Bilbo', 'Steve', 'Khendrik', 'Aaron'}

Список grades содержит списки оценок для каждого ученика в алфавитном порядке.
Например: 'Aaron' - [5, 3, 3, 5, 4]
Множество students содержит неупорядоченную последовательность имён всех учеников в классе.

Напишите программу, которая составляет словарь, используя grades и students,
где ключом будет имя ученика, а значением - его средний балл.

Вывод в консоль:
{'Aaron': 4.0, 'Bilbo': 2.25, 'Johhny': 4.0, 'Khendrik': 3.6666666666666665, 'Steve': 4.8}


Примечания:
Самостоятельно составлять (вручную) словарь не нужно (только изначально пустой).
Для решения задачи нужно вспомнить функции sum, len и др. (подумать самому).
Помните, что множество не является упорядоченной последовательностью. (нужен перевод в другой тип).

"""

name_and_gpa = dict()  # словарь, который будет хранить в себе {имя : средний балл}
grades = [[5, 3, 3, 5, 4], [2, 2, 2, 3], [4, 5, 5, 2], [4, 4, 3], [5, 5, 5, 4, 5]]  # список оценки студентов
students = {'Johnny', 'Bilbo', 'Steve', 'Khendrik', 'Aaron'}  # множество студентов
students = sorted(list(students))  # возмем список (почему бы и нет) и отсортируем его в алфавитном порядке
gpa = list()  # список хранящий в себе среднюю оценку

# тут нужны циклы... без них муторно, мало ли какой длины будет grades и students.

# Решение 1 без циклов

# gpa.append(sum(grades[0]) / len(grades[0]))  # Добавляет в конец списка результат суммы оценок по 0 индексу деленное на длину списка по индесу 0.
# gpa.append(sum(grades[1]) / len(grades[1]))
# gpa.append(sum(grades[2]) / len(grades[2]))
# gpa.append(sum(grades[3]) / len(grades[3]))
# gpa.append(sum(grades[4]) / len(grades[4]))
#
# name_and_gpa.update({students[0] : gpa[0],   # обновляет словарик и добавит новые пары по индексам
#                      students[1] : gpa[1],
#                      students[2] : gpa[2],
#                      students[3] : gpa[3],
#                      students[4] : gpa[4]})
# print(name_and_gpa)

# Решение 2
# погуглила про циклы на питоне

for item in range(len(grades)):  # вместо grades можно было бы использовать students, но разницы в данный момент нет
    gpa.append(sum(grades[item]) / len(grades[item]))  # добавляет в конец списка gpa результат суммы оценок по item  деленное на длину списка по item
    name_and_gpa.update({students[item]: gpa[item]})  # обновляет словарик и добавит новые пары по item
print(name_and_gpa)

# изначально вместо range(len(grades)) пыталась использовать grades,
# но как оказалось список списков использовать нельзя,
# поэтому пришлось придумать переменную
# создавала переменную gradesLen = [i for i in range(len(grades))]
# которая хранила бы в себе список количества элементов grades
# а потом додумалась взять из создания этой переменной только часть range(len(grades)

# был еще второй отдельный цикл
# for item in range(len(students)):
#     name_and_gpa.update({students[item]: gpa[item]})
# но я попробовала совместить эти строчки с первым for чтобы сократить код


# Решение 3
# Здесь можно обойтись и без лишнего списка gpa = list()  список хранящий в себе среднюю оценку

# for item in range(len(grades)):
#     name_and_gpa.update({students[item]: (sum(grades[item]) / len(grades[item]))})
# print(name_and_gpa)






